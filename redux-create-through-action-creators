CREATE A RECORD THROUGH ACTION CREATORS
-Any time a user submits a Form, need to attempt making a network request over to API(that i created)
1. Define Action Creator in order to make network request
2. Wire up Action Creator to Component via connect() helper
3. Call Action Creator from onSubmit() method
4. Action Creator will use Axios to make network request to API

Step ONE:
-In React App, install Axios and Redux-Thunk
-Both are used to write async Action Creator
  eg: install --save axios redux-thunk


Step TWO:
-Create new DIR: apis with File: (whatever name)
  eg: apis/records.js
-Create Axios instance
  eg: records.js
  import axios from 'axios';

  export default axios.create({
    baseURL: 'localhost:3001'  //this is the home URL that was made when i created the external API
  })

-Import Axios instance into actions/index.js
  eg: actions/index.js
  import records from '../apis/records';
  //other imports

  //other export consts
  //other export consts


Step THREE:
-Create new Action Creator to create/handle the new record
-Called with a list of values entered into Form, as argument
-Define async action creator, making use of redux-thunk
-Return arrow () with dispatch as 1st argument, and use with async
  eg: actions/index.js
  //import statements

  //other export consts

  export const createRecord = (formValues) => {
    return async (dispatch) => {

    }
  }


Step FOUR:
-Finally make POST request to the endpost at the baseURL API
-Putting in all the different properties in formValues
-('/records', formValues)
  eg: createRecord()
  export const createRecord = (formValues) => {
    return async (dispatch) => {
      records.post('/records', formValues)
    }
  }


Step FIVE:
-Make sure to successfully create new record on the API
-Import connect() and Action Creator (which will be a tad bit complicated)
  eg: RecordCreate component
  //other imports
  //other imports
  import { connect } from 'react-redux';
  import { createRecord } from '../../actions';   //action creator
