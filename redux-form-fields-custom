CUSTOMIZING FORM FIELDS
-Currently the input that is shown on the screen is very BLAND and UGLY
-No label, inputs are right next to each other, not informative enough for use to know what's going on
-Rather than just returning a Text Input, return an entire blob of JSX(different elements)
  eg: renderInput()
  renderInput(formProps) {
    return (
      <div className='field'>
        <label></label>
        <input
          onChange={formProps.input.onChange}
          value={formProps.input.value}
        />
      <div>
    )
  }

  ***label for telling user what the input actually represents***


-renderInput() is called twice(title, description)
-When label is used, need to make sure to associate which Field is being worked on
-To get that appropriate Field, add a new prop to both Field elements
  eg: Field props
  <Field name='title' component={this.renderInput} label='Enter Title' />
  <Field name='title' component={this.renderInput} label='Enter Description' />


-Any time a prop is added to Field component, RF will see a passed prop that it doesn't know what to do with
-Field element has NO idea what to do with a label prop
-Therefore, by default, the Field element will take the label prop and pass it through renderInput()
-This is HOW to customize renderInput() whenever it gets called
-renderInput() will receive label as an additional property on first argument
  eg: renderInput()
  renderInput(formProps, label) {
    return (
