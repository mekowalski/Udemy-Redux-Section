-Inevitably developers will work with a Reducer that will return an Array or Object and it will need to be
changed

Syntax for working with Arrays and Objects without mutating State
                    BAD                             GOOD
ARRAY
-Removing array
 element            state.pop()                     state.filter(element => element !=='hey')
-Adding array
 element            state.push('hola')              [...state, 'hola']
-Replacing array
 element            state[0] = 'hey'                state.map(el => el === 'hey' ? 'later' : el)

OBJECT
-Updating object
 property           state.name = 'Malind'           {...state, name: 'Malind'}
-Adding object
 property           state.age = 27                  {...state, age: 27}
-Removing object
 property           delete state.name               {...state, age: undefined}
                                                    OR _omit(stage, 'age') (Lodash library)

*Right side statements will be written in Reducers often!
*It will help create new objects/arrays for modification without original mutation
