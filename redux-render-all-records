RENDER ALL RECORDS
***refer to streams-app/streams-client***

-Within Record list component, need to make sure to get the list of records available as Props
  eg: StreamList Component
  1. Define mapStateToProps()
    - Receive state as argument and return an object of streams property(containing all streams)
    - Currently the streams are stored inside an object
    - Probably want to map over list of streams
    - Usually leave it as an object form inside Redux Store because it's easier to update/add/delete
    - BUT when the records are taken into a component through mapStateToProps(), usually the object will be
      turned into an actual array
    - An array is much easier to map over
    const mapStateToProps = (state) => {
      return { streams: }
    }

  2. Map over an array from an object
    - Work with state.streams
    - To get the list of just the streams inside an array and not worry about object nature:
    - Call Object.values() and pass in state.streams
    - Object.values() built in JS function, take an object as an argument, all the values are pulled out,
      then inserted into an array
    const mapStateToProps = (state) => {
      return { streams: Object.values(state.streams) }
    }

  3. Call this.props.streams(array of all the streams) with renderList()
    - Console.log(this.props.streams) does return an array of objects(woohoo!)
    - renderList() will return the result of this.props.streams
    renderList() {
      return this.props.streams
    }

  4. Map over the streams
    - For each stream, return some amount of JSX
