1. Story(analogy) to help understand Redux
2. Write some Redux-only code
3. Work on a React App
4. Understand how to integrate React with Redux


REDUX CYCLE
Action Creator ---> Action ---> Dispatch ---> Reducers ---> State

ONE
-Lets build and insurance company!
Policy: Customer holds a 'policy', if bad stuff happens to them then we pay them
Claim: Customer has something bad happen to them, we need to pay them
***These are insurance terms, NOT Redux terms***

                                                        INSURANCE CO
                                                        |          |
                                              | --->  FORM    Claims History
CUSTOMER ---> FORM --->  FORM RECEIVER  --->  |
                                              | --->  FORM    Policies
                                              |
                                              | --->  FORM    Accounting

DEPARTMENTS
-Claims History: List of all claims ever made
-Policies: List of who has a policy with the insurance company
-Accounting: Stores a big bag of cash, the customers pay for this


WHAT HAPPENS WHEN A NEW CUSTOMER WANTS TO SIGN UP FOR A NEW POLICY
Policy is a contract that covers the customer
a. Customer fills out a form for a Policy
b. Customer goes to Insurance Company HQ
c. They won't just go to one of the Departments to hand in the form
d. Customer has to take it to a front office/counter and give it to the Form Receiver
e. Form Receiver makes a copy of the Form
f. Then those copies will be handed off to each department inside the HQ

*The purpose of the first Form is to sign up for a new Policy
*Claims History probably doesn't care about a New Policy Form, they just record list of claims
*New Customer signing up for a new Policy will most likely be in touch with Policies Department


FURTHER DEVELOPMENT
What happens when a Form is handed off to a specific Department?
-Policies Dept is in charge for all who hold Policies
-They will see new Customer wanting new Policy and decide to add them

                                          POLICIES DEPARTMENT
                                      List of Customers w/ Policies

          Form to sign up                         Malind
            for a new      --------->              Ryan
             Policy                             Kristopher
                                                 Christine

MANAGEMENT TEAM: Tell me a list of who has a Policy right now!
-They will get frustrated with going to Policies Dept to get Policy information
-Instead of Policies Dept storing/managing the Policies
-The Policies will be stored inside a central Company Data Bank stored outside the Departments
-Now the Management Team can easily access any of the Departments without having to go to each Dept
-To update the Policies in the Data Bank, Form Receiver will go to both Policies Dept and Data Bank
-Policies Dept will look at new Form, process it and pass it back to the Data Bank


FINISHING THE ANALOGY
What is going on with the new Form
-Every Form that is filled out by a Customer has 2 parts(paper with field and field at the bottom)
-Have different TYPEs of Forms for creating Claim and Policy
-Type: Declares the purpose of the Form
-Payload: body of Form with info that's relevant to the Customer(Name and Claim Amount)

                  CLAIM
    FORM   --->     |
                    |
                Name: Malind          <---TYPE
              Claim Amount: $500      <---PAYLOAD

-Insurance Co would need 3 Types of Forms
-Each Form will have a different set of info for its Payload
1. Create Policy
2. Create Claim
3. Delete Policy


CLAIMS HISTORY DEPARTMENT
a. Form Receiver gives the Claims Dept the New Form and the current/previous list of Claims
b. Only when a Dept is given a Form will they be given the dataset from the Data Bank
c. Up to the Dept to update the Claims History in the Dept and Data Bank
d. Claims will determine if Form coming in is trying to create a Claim(Form Type)
  -No: Take that list of claims given and return it to the Data Bank
  -Yes: Take the Payload, add it to the list of Claims and update that in the Data Bank


ACCOUNTING DEPARTMENT
a. Form Receiver gives the Accounting Dept the New Form and the info on the Company money from Data Bank
b. Accounting will look at Form and see if it is a Claim
  -Yes: Pull the Payload from the Form, see how much the Customer wants, then pays them
    -They will then return the rest of the money back to the Data Bank with the updated amount
  -No: Accounting will probably look for Forms for creating Policy
    -Yes: That will take the amount of money to sign up for the Policy and return it updated to Data Bank
    -No: If Form is not a Claim or Policy then the Accounting Dept won't care and return it back to Data Bank


POLICIES DEPARTMENT
a. Form Receiver gives the Policies Dept the New Form and the current list of Policies from Data Bank
b. Policies Dept will look at Type of Form, is it trying to Create or End Policy
  -No: They won't care about the From and will excuse the original list of Policies
  -Yes: Whether the Form is to Start or End a Policy
    -End: Find the Customer name and take it off the Policy list
    -Start: Add the Customer name and add it to the Policy list
    -After Policy list is updated it will be returned to the Data Bank
