1. Story(analogy) to help understand Redux
2. Write some Redux-only code
3. Work on a React App
4. Understand how to integrate React with Redux


REDUX CYCLE
Action Creator ---> Action ---> Dispatch ---> Reducers ---> State

ONE
-Lets build and insurance company!
Policy: Customer holds a 'policy', if bad stuff happens to them then we pay them
Claim: Customer has something bad happen to them, we need to pay them
***These are insurance terms, NOT Redux terms***

                                                        INSURANCE CO
                                                        |          |
                                              | --->  FORM    Claims History
CUSTOMER ---> FORM --->  FORM RECEIVER  --->  |
                                              | --->  FORM    Policies
                                              |
                                              | --->  FORM    Accounting
