REDUX ARCHITECTURE DESIGN
-Two possible ways to integrate Auth with Redux

FIRST: Leave GoogleAuth Component untouched
-Not following closely the conventions of Redux
-Therefore not common or best approach
-This will help the Component show the entire Google OAuth process from start to finish

                                                            GoogleAuth
                                                            Component
                                                                |
      Redux Store                Action Creator           onSignInClick()   ----------->
          |                            |                  onSignOutClick()  ------------|
      Auth State <------------------ signIn() <------------ onAuthChange()   <------ GAPI Auth2
           ^---------------------- signOut() <---------------|  ^
          |                                                     |
          |_____________________________________________________|
                        isSignedIn: true/false

1. GoogleAuth Component: onSignOutClick(), onSignInClick() and onAuthChange() methods
  a. Whenever onSignInClick() and onSignOutClick() are called, essentially access the GAPI Auth2 instance
  b. This will begin the signIn flow or signOut flow
2. GAPI Auth2 library will call onAuthChange() inside class/component
3. In order to integrate Redux into this flow, make sure anytime onAuthChange() is called, call appropriate
   Action Creators: signIn() or signOut()
  a. Action Creators will be called anytime the user successfully signs in/out
  b. These Action Creators will return an Action that will show up inside a new Reducer(AuthReducer)
4. AuthReducer will, probably be an object, that will hold a simple boolean value, reflecting whether user
   is signed in/out

-Why reflect whether user is signed in/out in Redux Store when it's already recorded inside GoogleAuth comp
-Simple: currently only GoogleAuth component knows user auth status
  -This makes it difficult to use when other components will need to act based upon user auth status
  -Need to have the FACT of user auth status centrally located inside app
  -Having the status in GoogleAuth is not centrally available
