WHAT IS REACT-ROUTER
-Install:
npm install --save react-router-dom


React-Router Family Library
react-router: Core navigation lib, don't install this manually
  -This library decides how to work with React, how to change content and other low-level logic

react-router-dom: Navigation for dom-based applications
  -This works specifically in the browser, for browser-based, WEB navigation

react-router-native: Navigation for react-native applications
  -This works specifically for native-mobile applications

react-router-redux: Bindings between Redux and React-Router(not necessary)
  -This is deprecated now, but FOREAL, don't use it. Inside official docs, it's mentioned to not use


HOW REACT-ROUTER-DOM WORKS
eg: in an App component, above the declaration
const PageOne = () => {
  return <div>Page One</div>
}

const PageTwo = () => {
  return <div>Page Two</div>
}

//here, place instance of BrowserRouter(react component)
//within BrowserRouter, pass in a Route with a path
//exact is alone
//component={} references a JS variable
//second route to reference another JS variable
//2 routers with 2 paths, 1 exact and 2 components
const App = () => {
  return (
  <div>
    <BrowserRouter>
      <div>
        <Route path='/' exact component={PageOne}/>
        <Route path='/pagetwo' component={PageTwo} />
      </div>
    </BrowserRouter>
  </div>
  )
}

***Based upon URL(route), different content on the screen will be displayed***
-WHAT PART OF URL DOES RR CARE ABOUT
-RR doesn't care about entire url
-RR cares about all the characters listed after the domain definition and the port definition

Full URL                              Part RR cares about
localhost:3000                              /
localhost:3000/pageone                      /pageone
localhost:3000/posts/3                      /posts/5
google.com/search                           /search
learn.co/mekowalski                         /mekowalski
github.com/mekowalski/streams-client        /mekowalski/streams-client


HOW THE CHARACTERS AFTER DOMAIN IS USED BY RR
1. history: keeps track of address bar in the browser

2. BrowserRouter: listens for 'history' for changes to URL
  -When application is created, an instance of BrowserRouter is created
  -This component internally creates an object of 'history'
  -'history' will look at URL and extract just the portion RR cares about
  -BrowserRouter will then communicate to both Route path components

3. Route path='/' | Route path='/pagetwo'
  -Visible only when the 'path' matches the current URL
  -Route components decide either to show/hide themselves dependent on path of URL and path property

4. PageOne Component | PageTwo Component


HOW PATHS GET MATCHED
-Route components got a property passed to it that determines what to show on the screen via ='path'
-exact:
-component={}: show the JS reference
-Different routes can be matched by the same URLs
*multiple Route components that match a given URL and all show themselves on screen*
