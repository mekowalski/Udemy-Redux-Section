Understanding Async Action Creators

What's wrong with fetchPosts?
Issue 1: Action creators must return plain JS objects with a type property
*this is currently not happening*

Issue 2: By the time the action gets to a reducer, data won't have been fetched


WHAT HAPPENS WHEN APP RUNS(currently)

PostList
componentDidMount() {
  this.props.fetchPosts()
}           ------------>   Probably happening
                              in React-Redux
                            store.dispatch(
                              fetchPosts()
                            )     ------------>     actions/index.js
                                                  export const fetchPosts = async () => {
                                                    const response = await jsonPlaceholder.get('/posts');

                                                    return {
                                                      type: 'FETCH_POSTS',
                                                      payload: response
                                                    };
                                                  }

ISSUE NUMBER ONE - ASYNC AWAIT
What may seem to be occurring
-PostList Component lifecycle method, anytime it's invoked, it calls this.props.fetchPosts()
-Probably behind the scenes, dispatch is being called
  -everytime an action creator is called, it returns an action which is sent to dispatch on redux Store
-React-Redux is probably calling the action creator function of fetchPosts()
-React-Redux probably calls the fetchPosts() function
-A request is made from within, and then waiting occurs
-Then an object is returned

What is ACTUALLY happening
-componentDidMount gets called which calls fetchPosts
-That then calls an imaginary code inside React-Redux library(store.dispatch())
-Action creator gets called and invoked
-Then at some point in time, come across 'return jsonPlaceholder.get('/posts')' THE REQUEST OBJECT
-Not the ACTION OBJECT 'return { type: 'FETCH_POSTS', payload: response }'

OVERALL
-Request object is returned from action creator
-Which goes into store.dispatch()
-Then Redux Store looks at what's returned & wonders 'is this a plain JS object with only a type property'
-NO, because a Request object was returned, not an Action
-Therefore the error arises:
  Error: Actions must be plain objects. Use custom middleware for async actions.
-ACTIONS MUST BE PLAIN OBJECTS


ISSUE NUMBER TWO - DATA ISN'T RETRIEVED FROM API
      Actions get consumed in fractions of a second
     | <-----------------------------------------> |
    Action ---> Action ---> dispatch ---> Reducers ---> State
    Creator
*super fast, instantaneously*
