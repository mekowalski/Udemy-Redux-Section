CONDITIONAL IF STATEMENTS
-Reducer will have arguments of State and Action
eg:
  export default (state, action) => {

  }

-Inside Reducer, inspect the Action Type
-Because the state will deal with an array, the default state will be an empty array
-The very first time this Reducer is called, return the default state of empty array
-If action type matches the expression, then return a value
-If there is no action type match, then return state
eg:
  export default (state = [], action) => {
    if (action.type === 'FETCH_POSTS') {
      return action.payload
    }
    return state
  }

*This IF statement syntax inside the Reducer is not common
*In order to make sure handling of every Action comes into the Reducer without error
*Very frequently use switch statements


SWITCH STATEMENTS
-Valid JavaScript syntax, not React/Redux specific
-Take a look at the action.type property
-Then define a few cases inside the Reducer
-Under that case, define what to do if the action.type property matches the expression
-To always return some value, add in a default case to switch statement to return state
eg:
  export default (state = [], action) => {
    switch (action.type) {
      case: 'FETCH_POSTS':
        return action.payload
      default:
        return state
    }
  }

*This helps with multiple types the Reducer needs to handle
*This is extremely common syntax for Reducers
