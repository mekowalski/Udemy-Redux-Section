CONNECT
-Connect is a React Component that is provided from React
-Connect communicates with Provider to retrieve data from the store
-Through the Context system, a Parent Component is able to directly communicate with a Child component
1. Connect will ask Provider for Data from the Store
2. Provider will return the current Data
3. Connect takes the Data and passes it as a Prop to the respective Component(that needs the Data)
4. Connect will show Data of both State and Action Creators in the component as Props

eg: a Component
import React from 'react';
import { connect } from 'react-redux';

class ThisComponent extends React.Component {
  render() {
    return (
      <div>
        This is a Component
      </div>
    );
  }
}

export default connect()(ThisComponent)

*connect(): returns a function
*(ThisComponent): invokes the function


CONFIGURE CONNECT CALL WITH MAPSTATETOPROPS
-Get info from Store via the Provider
-Any time the Data in the Store changes, the Provider will automatically notify Connect function
-This also will ensure that the respective Component has the current/updated Data from Connect

*take State object, all the Data in Store
*run a calculation on it to show it up as Props inside Component
*can be named any thing ie: getMyState but convention is this name
eg:
const mapStateToProps = () => {

}

STATE
*called with all the State inside the Redux Store
*contains all the reducers and Data
eg:
const mapStateToProps = (state) => {
  console.log(state)

  return state
}

CONNECT CONFIGURATION
*after defining mapStateToProps(), pass it into the connect() as the first argument
*this is how to configure connect() component, configure by passing connect() a function
eg:
export default connect(mapStateToProps)(ThisComponent)

CONSOLE.LOG(STATE)
-Return
{songs: Array(3), selectedSong: null}
  selectedSong: null
  songs: Array(3)
    0: {title: "Winning Streak", duration: "3:19"}
    1: {title: "Blowback", duration: "4:05"}
    2: {title: "Belong To You", duration: "3:07"}


-Now return an object with a KEY of songs: and its value is state.songs
-Object returned will be the Props inside SongList Component
eg:
const mapStateToProps = (state) => {
  return { songs: state.songs }
}
