-Current navigation of routes in an application is to manually change the route in the address bar
eg: myapp.co/pageone => myapp.co/pagetwo

-Traditional App with just HTML pages, an anchor tag may be used to navigate between pages
eg: App Component
const PageOne = () => {
  return (
    <div>
      Page One
      <a href='/pagetwo'>Click for Page2</a>
    </div>
  )
}

const PageTwo = () => {
  return (
    <div>
      Page Two
      <a href='/pageone'>Click for Page1</a>
    </div>
  )
}

*this will create a link to the respective URLs and would work in the application*


-Unfortunately, even though this works well, this is not the practice for navigating React-Router pages
-Do not use anchor tags with RR
BAD NAVIGATION(normal operation of anchor tag)
1. <a /> tag is added to application with href='/pagetwo' and is clicked
2. browser makes request to localhost:3000
3. development server responds with index.html file(the same one inside the public DIR)
4. THIS IS THE BAD PART: browser receives index.html file, dumps old HTML file it was showing(including all
  the React/Redux state data!!!)
5. index.html file lists JS files in script tags: browser downloads and executes theses scripts
6. the app starts up

-Every time <a /> is clicked, a new request is made for that document, every time that document needs to show
-There isn't any saving of the data needed

-In addition to BrowserRouter and Route, pull in Link from react-router-dom
-Link: React component used in place of any anchor tag
-Replace <a /> with <Link />
-Replace href='' with to=''
-When clicked, this Link will take the user `to` that route

eg: App Component
return (
  <div>
    Page One
    <Link to='/pagetwo'>Click Page2</Link>
  </div>
)
}

const PageTwo = () => {
return (
  <div>
    Page Two
    <Link to='/pageone'>Click Page1</Link>
  </div>
)
}
